main_branch: &main_branch
  filters:
    branches:
      only: main
feature_branch: &feature_branch
  filters:
    branches:
      ignore: main

version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@8
  slack: circleci/slack@4.12.1

parameters:
  alerts-slack-channel:
    type: string
    default: send-legal-mail-alerts

  releases-slack-channel:
    type: string
    default: send-legal-mail-alerts

  node-version:
    type: string
    default: 20.9-browsers

executors:
  smoke-test:
    docker:
      - image: cypress/included:12.5.1
    working_directory: ~/tests

jobs:
  build:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci --no-audit
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - ~/.cache
      - run:
          command: |
            npm run build
            DATE=$(date '+%Y-%m-%d')
            export BUILD_NUMBER=${DATE}.${CIRCLE_BUILD_NUM}
            export GIT_REF="$CIRCLE_SHA1"
            npm run record-build-info
      - run: # Run linter after build because the integration test code depend on compiled typescript...
          name: Linter check
          command: npm run lint
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - build-info.json
            - build
            - dist
            - assets

  check_outdated:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-npm
          command: 'npm ci --no-audit'
      - run:
          name: Check version
          command: 'npm --version'
      - run:
          name: Run check
          command: 'npm outdated typescript govuk-frontend'
      - slack/notify:
          event: fail
          channel: << pipeline.parameters.alerts-slack-channel >>
          template: basic_fail_1

  unit_test:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: unit tests
          command: npm run test:ci
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test_results/unit-test-reports.html
      - store_artifacts:
          path: test_results/jest/coverage

  integration_test:
    executor:
      name: hmpps/node_redis
      node_tag: << pipeline.parameters.node-version >>
      redis_tag: "6.2"
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Install missing OS dependency
          command: sudo apt-get install libxss1
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Get wiremock
          command: curl -o wiremock.jar https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-jre8-standalone/2.35.0/wiremock-jre8-standalone-2.35.0.jar
      - run:
          name: Run wiremock
          command: java -jar wiremock.jar --port 9091
          background: true
      - run:
          name: Run the node app.
          command: npm run start-feature
          background: true
      - run:
          name: Wait for node app to start
          command: sleep 5
      - run:
          name: integration tests
          command: npm run int-test
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: integration_tests/videos
      - store_artifacts:
          path: integration_tests/screenshots

  run_smoke_test:
    circleci_ip_ranges: true
    executor: smoke-test
    parameters:
      env:
        type: string
        default: dev
    steps:
      - checkout
      - run:
          name: Install curl
          command: apt-get update && apt-get install -y curl
      - hmpps/k8s_setup
      - run:
          name: Install jq
          command: apt-get update && apt-get install -y jq
      - run:
          name: Run smoke tests in << parameters.env >>
          command: |
            cd smoke_tests
            ./run-smoke-test.sh \
              --env << parameters.env >> \
              --lsj-secret $(kubectl -n send-legal-mail-to-prisons-<< parameters.env >> get secret smoke-test --template={{.data.APP_SMOKETEST_LSJSECRET}} | base64 -d) \
              --msj-secret $(kubectl -n send-legal-mail-to-prisons-<< parameters.env >> get secret smoke-test --template={{.data.APP_SMOKETEST_MSJSECRET}} | base64 -d) \
              --lsj-url https://send-legal-mail-<< parameters.env >>.prison.service.justice.gov.uk \
              --msj-url https://check-rule39-mail-<< parameters.env >>.prison.service.justice.gov.uk \
              --cypress-exe cypress
      - store_test_results:
          path: /tmp/slm-smoke-test-<< parameters.env >>/test_results
      - store_artifacts:
          path: /tmp/slm-smoke-test-<< parameters.env >>/videos
      - store_artifacts:
          path: /tmp/slm-smoke-test-<< parameters.env >>/screenshots
      - store_artifacts:
          path: /tmp/slm-smoke-test-<< parameters.env >>/downloads

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - unit_test:
          requires:
            - build
#      - integration_test:
#          requires:
#            - build
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_docker:
          name: build_docker

      - request-dev-preview-approval:
          <<: *feature_branch
          type: approval
          requires:
            - helm_lint
            - unit_test
            #- integration_test
            - build_docker
      - hmpps/deploy_env:
          <<: *feature_branch
          name: deploy_dev_preview
          env: "dev"
          context: hmpps-common-vars
          requires:
            - request-dev-preview-approval
      - run_smoke_test:
          name: smoke_test_dev_preview
          env: dev
          requires:
            - deploy_dev_preview

      - hmpps/deploy_env:
          <<: *main_branch
          name: deploy_dev
          env: "dev"
          context: hmpps-common-vars
          requires:
            - helm_lint
            - unit_test
            #- integration_test
            - build_docker
      - run_smoke_test:
          name: smoke_test_dev
          env: dev
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          context:
            - hmpps-common-vars
            - send-legal-mail-to-prisons-preprod
          requires:
            - smoke_test_dev
      - run_smoke_test:
          name: smoke_test_preprod
          env: preprod
          requires:
            - deploy_preprod
          context:
            - hmpps-common-vars
            - send-legal-mail-to-prisons-preprod
      - request-prod-approval:
          type: approval
          requires:
            - smoke_test_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
          context:
            - hmpps-common-vars
            - send-legal-mail-to-prisons-prod
          requires:
            - request-prod-approval

  security:
    triggers:
      - schedule:
          cron: "30 6 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - check_outdated:
          context:
            - hmpps-common-vars
      - hmpps/npm_security_audit:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/trivy_latest_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/veracode_pipeline_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
  security-weekly:
    triggers:
      - schedule:
          cron: "20 6 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
